// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: web_game.proto

#ifndef PROTOBUF_web_5fgame_2eproto__INCLUDED
#define PROTOBUF_web_5fgame_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_web_5fgame_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsGameNotifyGameManagerInfoImpl();
void InitDefaultsGameNotifyGameManagerInfo();
void InitDefaultsGameManagerAckGameInfoResultImpl();
void InitDefaultsGameManagerAckGameInfoResult();
void InitDefaultsPlayerRequestGameManagerInfoImpl();
void InitDefaultsPlayerRequestGameManagerInfo();
void InitDefaultsGameManagerAckPlayerInfoResultImpl();
void InitDefaultsGameManagerAckPlayerInfoResult();
inline void InitDefaults() {
  InitDefaultsGameNotifyGameManagerInfo();
  InitDefaultsGameManagerAckGameInfoResult();
  InitDefaultsPlayerRequestGameManagerInfo();
  InitDefaultsGameManagerAckPlayerInfoResult();
}
}  // namespace protobuf_web_5fgame_2eproto
namespace game_proto {
class GameManagerAckGameInfoResult;
class GameManagerAckGameInfoResultDefaultTypeInternal;
extern GameManagerAckGameInfoResultDefaultTypeInternal _GameManagerAckGameInfoResult_default_instance_;
class GameManagerAckPlayerInfoResult;
class GameManagerAckPlayerInfoResultDefaultTypeInternal;
extern GameManagerAckPlayerInfoResultDefaultTypeInternal _GameManagerAckPlayerInfoResult_default_instance_;
class GameNotifyGameManagerInfo;
class GameNotifyGameManagerInfoDefaultTypeInternal;
extern GameNotifyGameManagerInfoDefaultTypeInternal _GameNotifyGameManagerInfo_default_instance_;
class PlayerRequestGameManagerInfo;
class PlayerRequestGameManagerInfoDefaultTypeInternal;
extern PlayerRequestGameManagerInfoDefaultTypeInternal _PlayerRequestGameManagerInfo_default_instance_;
}  // namespace game_proto
namespace game_proto {

// ===================================================================

class GameNotifyGameManagerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game_proto.GameNotifyGameManagerInfo) */ {
 public:
  GameNotifyGameManagerInfo();
  virtual ~GameNotifyGameManagerInfo();

  GameNotifyGameManagerInfo(const GameNotifyGameManagerInfo& from);

  inline GameNotifyGameManagerInfo& operator=(const GameNotifyGameManagerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameNotifyGameManagerInfo(GameNotifyGameManagerInfo&& from) noexcept
    : GameNotifyGameManagerInfo() {
    *this = ::std::move(from);
  }

  inline GameNotifyGameManagerInfo& operator=(GameNotifyGameManagerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameNotifyGameManagerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameNotifyGameManagerInfo* internal_default_instance() {
    return reinterpret_cast<const GameNotifyGameManagerInfo*>(
               &_GameNotifyGameManagerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GameNotifyGameManagerInfo* other);
  friend void swap(GameNotifyGameManagerInfo& a, GameNotifyGameManagerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameNotifyGameManagerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GameNotifyGameManagerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameNotifyGameManagerInfo& from);
  void MergeFrom(const GameNotifyGameManagerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameNotifyGameManagerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dw_player_port = 1;
  void clear_dw_player_port();
  static const int kDwPlayerPortFieldNumber = 1;
  ::google::protobuf::uint32 dw_player_port() const;
  void set_dw_player_port(::google::protobuf::uint32 value);

  // uint32 dw_server_port = 2;
  void clear_dw_server_port();
  static const int kDwServerPortFieldNumber = 2;
  ::google::protobuf::uint32 dw_server_port() const;
  void set_dw_server_port(::google::protobuf::uint32 value);

  // uint64 qw_player_point = 4;
  void clear_qw_player_point();
  static const int kQwPlayerPointFieldNumber = 4;
  ::google::protobuf::uint64 qw_player_point() const;
  void set_qw_player_point(::google::protobuf::uint64 value);

  // uint32 dw_slave_server_port = 3;
  void clear_dw_slave_server_port();
  static const int kDwSlaveServerPortFieldNumber = 3;
  ::google::protobuf::uint32 dw_slave_server_port() const;
  void set_dw_slave_server_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:game_proto.GameNotifyGameManagerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dw_player_port_;
  ::google::protobuf::uint32 dw_server_port_;
  ::google::protobuf::uint64 qw_player_point_;
  ::google::protobuf::uint32 dw_slave_server_port_;
  mutable int _cached_size_;
  friend struct ::protobuf_web_5fgame_2eproto::TableStruct;
  friend void ::protobuf_web_5fgame_2eproto::InitDefaultsGameNotifyGameManagerInfoImpl();
};
// -------------------------------------------------------------------

class GameManagerAckGameInfoResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game_proto.GameManagerAckGameInfoResult) */ {
 public:
  GameManagerAckGameInfoResult();
  virtual ~GameManagerAckGameInfoResult();

  GameManagerAckGameInfoResult(const GameManagerAckGameInfoResult& from);

  inline GameManagerAckGameInfoResult& operator=(const GameManagerAckGameInfoResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameManagerAckGameInfoResult(GameManagerAckGameInfoResult&& from) noexcept
    : GameManagerAckGameInfoResult() {
    *this = ::std::move(from);
  }

  inline GameManagerAckGameInfoResult& operator=(GameManagerAckGameInfoResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameManagerAckGameInfoResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameManagerAckGameInfoResult* internal_default_instance() {
    return reinterpret_cast<const GameManagerAckGameInfoResult*>(
               &_GameManagerAckGameInfoResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GameManagerAckGameInfoResult* other);
  friend void swap(GameManagerAckGameInfoResult& a, GameManagerAckGameInfoResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameManagerAckGameInfoResult* New() const PROTOBUF_FINAL { return New(NULL); }

  GameManagerAckGameInfoResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameManagerAckGameInfoResult& from);
  void MergeFrom(const GameManagerAckGameInfoResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameManagerAckGameInfoResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dw_result = 1;
  void clear_dw_result();
  static const int kDwResultFieldNumber = 1;
  ::google::protobuf::uint32 dw_result() const;
  void set_dw_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:game_proto.GameManagerAckGameInfoResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dw_result_;
  mutable int _cached_size_;
  friend struct ::protobuf_web_5fgame_2eproto::TableStruct;
  friend void ::protobuf_web_5fgame_2eproto::InitDefaultsGameManagerAckGameInfoResultImpl();
};
// -------------------------------------------------------------------

class PlayerRequestGameManagerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game_proto.PlayerRequestGameManagerInfo) */ {
 public:
  PlayerRequestGameManagerInfo();
  virtual ~PlayerRequestGameManagerInfo();

  PlayerRequestGameManagerInfo(const PlayerRequestGameManagerInfo& from);

  inline PlayerRequestGameManagerInfo& operator=(const PlayerRequestGameManagerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerRequestGameManagerInfo(PlayerRequestGameManagerInfo&& from) noexcept
    : PlayerRequestGameManagerInfo() {
    *this = ::std::move(from);
  }

  inline PlayerRequestGameManagerInfo& operator=(PlayerRequestGameManagerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerRequestGameManagerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerRequestGameManagerInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerRequestGameManagerInfo*>(
               &_PlayerRequestGameManagerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PlayerRequestGameManagerInfo* other);
  friend void swap(PlayerRequestGameManagerInfo& a, PlayerRequestGameManagerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerRequestGameManagerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerRequestGameManagerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerRequestGameManagerInfo& from);
  void MergeFrom(const PlayerRequestGameManagerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerRequestGameManagerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dw_result = 1;
  void clear_dw_result();
  static const int kDwResultFieldNumber = 1;
  ::google::protobuf::uint32 dw_result() const;
  void set_dw_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:game_proto.PlayerRequestGameManagerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dw_result_;
  mutable int _cached_size_;
  friend struct ::protobuf_web_5fgame_2eproto::TableStruct;
  friend void ::protobuf_web_5fgame_2eproto::InitDefaultsPlayerRequestGameManagerInfoImpl();
};
// -------------------------------------------------------------------

class GameManagerAckPlayerInfoResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game_proto.GameManagerAckPlayerInfoResult) */ {
 public:
  GameManagerAckPlayerInfoResult();
  virtual ~GameManagerAckPlayerInfoResult();

  GameManagerAckPlayerInfoResult(const GameManagerAckPlayerInfoResult& from);

  inline GameManagerAckPlayerInfoResult& operator=(const GameManagerAckPlayerInfoResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameManagerAckPlayerInfoResult(GameManagerAckPlayerInfoResult&& from) noexcept
    : GameManagerAckPlayerInfoResult() {
    *this = ::std::move(from);
  }

  inline GameManagerAckPlayerInfoResult& operator=(GameManagerAckPlayerInfoResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameManagerAckPlayerInfoResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameManagerAckPlayerInfoResult* internal_default_instance() {
    return reinterpret_cast<const GameManagerAckPlayerInfoResult*>(
               &_GameManagerAckPlayerInfoResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GameManagerAckPlayerInfoResult* other);
  friend void swap(GameManagerAckPlayerInfoResult& a, GameManagerAckPlayerInfoResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameManagerAckPlayerInfoResult* New() const PROTOBUF_FINAL { return New(NULL); }

  GameManagerAckPlayerInfoResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameManagerAckPlayerInfoResult& from);
  void MergeFrom(const GameManagerAckPlayerInfoResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameManagerAckPlayerInfoResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dw_player_port = 1;
  void clear_dw_player_port();
  static const int kDwPlayerPortFieldNumber = 1;
  ::google::protobuf::uint32 dw_player_port() const;
  void set_dw_player_port(::google::protobuf::uint32 value);

  // uint32 dw_server_port = 2;
  void clear_dw_server_port();
  static const int kDwServerPortFieldNumber = 2;
  ::google::protobuf::uint32 dw_server_port() const;
  void set_dw_server_port(::google::protobuf::uint32 value);

  // uint32 dw_slave_server_port = 3;
  void clear_dw_slave_server_port();
  static const int kDwSlaveServerPortFieldNumber = 3;
  ::google::protobuf::uint32 dw_slave_server_port() const;
  void set_dw_slave_server_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:game_proto.GameManagerAckPlayerInfoResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dw_player_port_;
  ::google::protobuf::uint32 dw_server_port_;
  ::google::protobuf::uint32 dw_slave_server_port_;
  mutable int _cached_size_;
  friend struct ::protobuf_web_5fgame_2eproto::TableStruct;
  friend void ::protobuf_web_5fgame_2eproto::InitDefaultsGameManagerAckPlayerInfoResultImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GameNotifyGameManagerInfo

// uint32 dw_player_port = 1;
inline void GameNotifyGameManagerInfo::clear_dw_player_port() {
  dw_player_port_ = 0u;
}
inline ::google::protobuf::uint32 GameNotifyGameManagerInfo::dw_player_port() const {
  // @@protoc_insertion_point(field_get:game_proto.GameNotifyGameManagerInfo.dw_player_port)
  return dw_player_port_;
}
inline void GameNotifyGameManagerInfo::set_dw_player_port(::google::protobuf::uint32 value) {
  
  dw_player_port_ = value;
  // @@protoc_insertion_point(field_set:game_proto.GameNotifyGameManagerInfo.dw_player_port)
}

// uint32 dw_server_port = 2;
inline void GameNotifyGameManagerInfo::clear_dw_server_port() {
  dw_server_port_ = 0u;
}
inline ::google::protobuf::uint32 GameNotifyGameManagerInfo::dw_server_port() const {
  // @@protoc_insertion_point(field_get:game_proto.GameNotifyGameManagerInfo.dw_server_port)
  return dw_server_port_;
}
inline void GameNotifyGameManagerInfo::set_dw_server_port(::google::protobuf::uint32 value) {
  
  dw_server_port_ = value;
  // @@protoc_insertion_point(field_set:game_proto.GameNotifyGameManagerInfo.dw_server_port)
}

// uint32 dw_slave_server_port = 3;
inline void GameNotifyGameManagerInfo::clear_dw_slave_server_port() {
  dw_slave_server_port_ = 0u;
}
inline ::google::protobuf::uint32 GameNotifyGameManagerInfo::dw_slave_server_port() const {
  // @@protoc_insertion_point(field_get:game_proto.GameNotifyGameManagerInfo.dw_slave_server_port)
  return dw_slave_server_port_;
}
inline void GameNotifyGameManagerInfo::set_dw_slave_server_port(::google::protobuf::uint32 value) {
  
  dw_slave_server_port_ = value;
  // @@protoc_insertion_point(field_set:game_proto.GameNotifyGameManagerInfo.dw_slave_server_port)
}

// uint64 qw_player_point = 4;
inline void GameNotifyGameManagerInfo::clear_qw_player_point() {
  qw_player_point_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GameNotifyGameManagerInfo::qw_player_point() const {
  // @@protoc_insertion_point(field_get:game_proto.GameNotifyGameManagerInfo.qw_player_point)
  return qw_player_point_;
}
inline void GameNotifyGameManagerInfo::set_qw_player_point(::google::protobuf::uint64 value) {
  
  qw_player_point_ = value;
  // @@protoc_insertion_point(field_set:game_proto.GameNotifyGameManagerInfo.qw_player_point)
}

// -------------------------------------------------------------------

// GameManagerAckGameInfoResult

// uint32 dw_result = 1;
inline void GameManagerAckGameInfoResult::clear_dw_result() {
  dw_result_ = 0u;
}
inline ::google::protobuf::uint32 GameManagerAckGameInfoResult::dw_result() const {
  // @@protoc_insertion_point(field_get:game_proto.GameManagerAckGameInfoResult.dw_result)
  return dw_result_;
}
inline void GameManagerAckGameInfoResult::set_dw_result(::google::protobuf::uint32 value) {
  
  dw_result_ = value;
  // @@protoc_insertion_point(field_set:game_proto.GameManagerAckGameInfoResult.dw_result)
}

// -------------------------------------------------------------------

// PlayerRequestGameManagerInfo

// uint32 dw_result = 1;
inline void PlayerRequestGameManagerInfo::clear_dw_result() {
  dw_result_ = 0u;
}
inline ::google::protobuf::uint32 PlayerRequestGameManagerInfo::dw_result() const {
  // @@protoc_insertion_point(field_get:game_proto.PlayerRequestGameManagerInfo.dw_result)
  return dw_result_;
}
inline void PlayerRequestGameManagerInfo::set_dw_result(::google::protobuf::uint32 value) {
  
  dw_result_ = value;
  // @@protoc_insertion_point(field_set:game_proto.PlayerRequestGameManagerInfo.dw_result)
}

// -------------------------------------------------------------------

// GameManagerAckPlayerInfoResult

// uint32 dw_player_port = 1;
inline void GameManagerAckPlayerInfoResult::clear_dw_player_port() {
  dw_player_port_ = 0u;
}
inline ::google::protobuf::uint32 GameManagerAckPlayerInfoResult::dw_player_port() const {
  // @@protoc_insertion_point(field_get:game_proto.GameManagerAckPlayerInfoResult.dw_player_port)
  return dw_player_port_;
}
inline void GameManagerAckPlayerInfoResult::set_dw_player_port(::google::protobuf::uint32 value) {
  
  dw_player_port_ = value;
  // @@protoc_insertion_point(field_set:game_proto.GameManagerAckPlayerInfoResult.dw_player_port)
}

// uint32 dw_server_port = 2;
inline void GameManagerAckPlayerInfoResult::clear_dw_server_port() {
  dw_server_port_ = 0u;
}
inline ::google::protobuf::uint32 GameManagerAckPlayerInfoResult::dw_server_port() const {
  // @@protoc_insertion_point(field_get:game_proto.GameManagerAckPlayerInfoResult.dw_server_port)
  return dw_server_port_;
}
inline void GameManagerAckPlayerInfoResult::set_dw_server_port(::google::protobuf::uint32 value) {
  
  dw_server_port_ = value;
  // @@protoc_insertion_point(field_set:game_proto.GameManagerAckPlayerInfoResult.dw_server_port)
}

// uint32 dw_slave_server_port = 3;
inline void GameManagerAckPlayerInfoResult::clear_dw_slave_server_port() {
  dw_slave_server_port_ = 0u;
}
inline ::google::protobuf::uint32 GameManagerAckPlayerInfoResult::dw_slave_server_port() const {
  // @@protoc_insertion_point(field_get:game_proto.GameManagerAckPlayerInfoResult.dw_slave_server_port)
  return dw_slave_server_port_;
}
inline void GameManagerAckPlayerInfoResult::set_dw_slave_server_port(::google::protobuf::uint32 value) {
  
  dw_slave_server_port_ = value;
  // @@protoc_insertion_point(field_set:game_proto.GameManagerAckPlayerInfoResult.dw_slave_server_port)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_web_5fgame_2eproto__INCLUDED
