syntax = "proto3";
//只能用这种命名方式 不能用小写 下划线
package GameProto;

import "web_data.proto";

//服务器类型
enum EServerType
{
	ST_NONE = 0;
	ST_Login = 1;
	ST_Team = 2;
	ST_GameManager = 3;
}

//组队的类型
enum ETeamType
{
	TT_NONE = 0;
	TT_Normal = 1;
}

//错误码
enum EErrorCode
{
	EC_NONE = 0;
	EC_MakeTeamNotIdle = 1;		//创建队伍时 角色状态不是idle
	EC_NoTeamServer = 2;		//没有组队服务器
}

//player->login
message PlayerRequestLogin
{
	uint64 qw_player_id = 1;
	string sz_nick_name = 2;
	string sz_avatar = 3;
	uint32 dw_sex = 4;
	uint32 dw_balance = 5;
	string sz_token = 6;
}

message PlayerRequestLoginMakeTeam
{
}

message PlayerRequestLoginInviteTeam
{
	repeated uint64 qw_player_id = 1;
}

message PlayerRequestLoginChangeSlot
{
	uint32 dw_slot_id = 1;
}

//login->player
message LoginAckPlayerLoginResult
{
	uint32 dw_result = 1;
}

message LoginAckPlayerMakeTeam
{
	uint32 dw_result = 1;
	uint64 qw_team_id = 2;
}

message LoginNotifyPlayerTeamInfo
{
	repeated TeamRoleData team_role_data = 1;
}

message LoginAckPlayerInviteTeam
{
	uint32 dw_result = 1;
}

message LoginAckPlayerChangeSlot
{
	uint32 dw_result = 1;
}

//login->team
message LoginRequestTeamMakeTeam
{
	uint64 qw_player_id = 1;
	RoleData role_data = 2;
}

message LoginRequestTeamInviteTeam
{
	uint32 dw_result = 1;
	uint32 dw_slot = 2;
}

message LoginRequestTeamChangeSlot
{
	uint32 dw_result = 1;
	uint32 dw_slot = 2;
}

//team->login
message TeamAckLoginMakeTeam
{
	uint32 dw_result = 1;
	uint64 qw_player_id = 2;
	uint64 qw_team_id = 3;
}

message TeamNotifyLoginTeamInfo
{
	repeated TeamRoleData team_role_data = 1;
}

message TeamAckLoginInviteTeam
{
	uint32 dw_result = 1;
	uint32 dw_slot = 2;
}

message TeamAckLoginChangeSlot
{
	uint32 dw_result = 1;
	uint32 dw_slot = 2;
}

//game->gamemanager
message GameNotifyGameManagerInfo
{
	uint32 dw_player_port = 1;
	uint32 dw_server_port = 2;
	uint32 dw_slave_server_port = 3;
	uint64 qw_player_point = 4;
}

//gamemanager->game
message GameManagerAckGameInfoResult
{
	uint32 dw_result = 1;
}

//player->gamemanager
message PlayerRequestGameManagerInfo
{
	uint32 dw_result = 1;
}

//gamemanager->player
message GameManagerAckPlayerInfoResult
{
	uint32 dw_player_port = 1;
	uint32 dw_server_port = 2;
	uint32 dw_slave_server_port = 3;
}

//player->game
message PlayerRequestGameTest
{
	string sz_test = 1;
}

//serverinfo(server->server_center, server_center->server)
message ServerInfo
{
	uint32 dw_server_id = 1;
	string sz_listen_ip = 2;
	uint32 dw_team_port = 3;
	uint32 dw_game_server_manager_port = 4;
	uint32 dw_login_port = 5;
}
